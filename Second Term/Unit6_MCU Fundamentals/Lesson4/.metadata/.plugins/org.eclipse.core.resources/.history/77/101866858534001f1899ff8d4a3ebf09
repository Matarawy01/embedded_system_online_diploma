/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

/* Abdelrahman Matarawy
 * 27/6/2024
 * Learn_In_Depth
 */
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#define unit32_t 		 unsigned int
/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Register Address ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
// RCC
#define RCC_BASE    	 0x40021000
#define RCC_APB2RSTR 	 *(volatile unit32_t *)(RCC_BASE + 0x18)
#define RCC_IOPAEN  (1<<2)
// GPIO
#define GPIOA_BASE  	 0x40010800
#define GPIOA_CRH 	 	 *(volatile unit32_t *)(GPIOA_BASE + 0x04)
#define GPIOA_ODR 	 	 *(volatile unit32_t *)(GPIOA_BASE + 0x0C) //ODR -> Output data register
#define GPIOx_CRL 	 	 *(volatile unit32_t *)(GPIOA_BASE + 0x00)
#define GPIOA13 (1<<13)
//EXI
#define EXI_BASE    	 0x40010400
#define EXTI_IMR 	 	 *(volatile unit32_t *)(EXI_BASE)
#define EXTI_RTSR 	 	 *(volatile unit32_t *)(EXI_BASE + 0x08)
#define EXTI_PR 	 	 *(volatile unit32_t *)(EXI_BASE + 0x14)
//AFIO
#define AFIO_BASE    	 0x40010000
#define AFIO_EXTICR1 	 *(volatile unit32_t *)(AFIO_BASE + 0x08)

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ CLOCK Init ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
void clock_init(void)
{
	/* Enable clock GPIOA */
	RCC_APB2RSTR |= RCC_IOPAEN;
	/* Enable clock AFIOA */
	RCC_APB2RSTR |= (1 << 0);
}
/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ GPIOA Init ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
void GPIO_init(void)
{
	/* Pin 13 port A as Output */
	GPIOA_CRH &= 0xFF0FFFFF;
	GPIOA_CRH |= 0x00200000;
	/* Pin 0 port A as floating pin */
	GPIOx_CRL |= (1 << 2);

}

int main(void)
{
	clock_init();
	GPIO_init();
	/* EXTI configuration to PORTA0 */
	AFIO_EXTICR1 = 0;
	/* Enable EXI line 0 (mask 1)*/
	EXTI_IMR |= (1 << 0);
	/* Enable Rising trigger*/
	EXTI_RTSR |= ( 1<< 0);
}

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ISR of EXI ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
void EXTI0_IRQHandler(void)
{
	//ISQ is Happened EXI0 >> _|- Raising Edge happen on PIN0->PORTA
	//Toggle LED pin 13
	GPIOA_ODR ^= GPIOA13;
	/* Clear Pending Request for line 0 */
	EXTI_PR |=(1<<0);
}

